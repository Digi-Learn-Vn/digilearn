version: "3.9"

services:
  backend:
    build:
      context: ./apps/DigiLearnBackend
      dockerfile: Dockerfile
    container_name: django_backend
    volumes:
      - ./apps/DigiLearnBackend:/app
    env_file:
      - .env
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  flutter:
    build:
      context: ./apps/flutter_app
      dockerfile: Dockerfile
    container_name: flutter_frontend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./apps/flutter_app/build/web:/usr/share/nginx/html:ro
    depends_on:
      - flutter
      - backend
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
